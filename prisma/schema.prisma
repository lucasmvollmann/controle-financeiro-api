generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  password      String
  name          String
  role          UserRole        @default(User)
  AccountMember AccountMember[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
  Category      Category[]
}

model Account {
  id            Int             @id @default(autoincrement())
  name          String
  AccountMember AccountMember[]
  categoryId    Int
  Category      Category        @relation(fields: [categoryId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
}

model AccountMember {
  userId      Int
  user        User              @relation(fields: [userId], references: [id])
  accountId   Int
  account     Account           @relation(fields: [accountId], references: [id])
  role        AccountMemberRole @default(Member)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @default(now())
  transaction Transaction[]

  @@id([userId, accountId])
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  type        CategoryType
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  account     Account[]
  transaction Transaction[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now())
}

model Transaction {
  id           Int           @id @default(autoincrement())
  description  String
  value        Decimal
  date         DateTime
  accontMember AccountMember @relation(fields: [userId, accountId], references: [userId, accountId])
  userId       Int
  accountId    Int
  categoryId   Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  Category     Category      @relation(fields: [categoryId], references: [id])
}

enum AccountMemberRole {
  Owner
  Member
}

enum CategoryType {
  Account
  Transaction
}

enum UserRole {
  User
  Admin
}
